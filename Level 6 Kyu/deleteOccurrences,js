//Given a list and a number, create a new list that contains each number of list at most N times, without reordering.
//For example if the input number is 2, and the input list is [1,2,3,1,2,1,2,3], you take [1,2,3,1,2], drop the next [1,2] since this would lead to 1 and 2 being in the result 3 times, and then take 3, which leads to [1,2,3,1,2,3].
//With list [20,37,20,21] and number 1, the result would be [20,37,21].


function deleteNth(arr,x){
  while (true) {
    for (var i = 0; i < arr.length; ++i) {
      var count = 0;
      
      for (var j = 0; j < arr.length; ++j) {
      
        if (arr[i] === arr[j]) {
          ++count;
          
          if (count > x) {
            arr.splice(j, 1);
            break;
          }
        }        
      }
      if (j !== arr.length) break;      
    }
    if (i === arr.length) break;
  }
  
  return arr;
}


//higher order functions
function deleteNth(arr,x){
  var obj = {}
  return arr.filter(function(number){
    obj[number] = obj[number] ? obj[number] + 1 : 1
    return obj[number] <= x
  })
}
